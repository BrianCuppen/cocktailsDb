// <auto-generated />
using CocktailDb.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace cocktailDb.Migrations
{
    [DbContext(typeof(CocktailContext))]
    partial class CocktailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CocktailDb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CocktailDb.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Alcoholic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AlternateName")
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("DbDrinkId")
                        .HasColumnType("longtext");

                    b.Property<int>("GlassTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Iba")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GlassTypeId")
                        .IsUnique();

                    b.HasIndex("IngredientId")
                        .IsUnique();

                    b.HasIndex("MeasurementId")
                        .IsUnique();

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("CocktailDb.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("longtext");

                    b.Property<int>("EmailsSent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("CocktailDb.Models.Glass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Glasses");
                });

            modelBuilder.Entity("CocktailDb.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DrinkName")
                        .HasColumnType("longtext");

                    b.Property<int>("IdOfDrink")
                        .HasColumnType("int");

                    b.Property<string>("Ingredient1")
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient2")
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient3")
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient4")
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredient5")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("CocktailDb.Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DrinkName")
                        .HasColumnType("longtext");

                    b.Property<int>("IdOfDrink")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Measure1")
                        .HasColumnType("longtext");

                    b.Property<string>("Measure2")
                        .HasColumnType("longtext");

                    b.Property<string>("Measure3")
                        .HasColumnType("longtext");

                    b.Property<string>("Measure4")
                        .HasColumnType("longtext");

                    b.Property<string>("Measure5")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("CocktailDb.Models.Drink", b =>
                {
                    b.HasOne("CocktailDb.Models.Glass", "GlassType")
                        .WithOne()
                        .HasForeignKey("CocktailDb.Models.Drink", "GlassTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailDb.Models.Ingredient", "Ingredient")
                        .WithOne()
                        .HasForeignKey("CocktailDb.Models.Drink", "IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailDb.Models.Measurement", "Measurement")
                        .WithOne()
                        .HasForeignKey("CocktailDb.Models.Drink", "MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlassType");

                    b.Navigation("Ingredient");

                    b.Navigation("Measurement");
                });
#pragma warning restore 612, 618
        }
    }
}
